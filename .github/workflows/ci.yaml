name: massiv-compat-CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]

defaults: { run: { shell: bash } }

jobs:
  build-cabal:
    name: CI-cabal
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-haskell@v1
      id: setup-haskell-cabal
      with:
        ghc-version: 'latest'
    - name: Update cabal package database
      run: cabal update
    - uses: actions/cache@v2
      name: Cache cabal stuff
      with:
        path: |
          massiv-serialise/${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          massiv-serialise/dist-newstyle
          massiv-persist/${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          massiv-persist/dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc }}
    - name: Build and test
      run: |
        cd massiv-serialise
        cabal sdist -z -o .
        cabal get massiv-serialise-*.tar.gz
        cd massiv-serialise-*/
        cabal test all

        cd ../../massiv-persist
        cabal sdist -z -o .
        cabal get massiv-persist-*.tar.gz
        cd massiv-persist-*/
        cabal test all
  build-stack:
    name: CI-stack
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        resolver: [nightly, lts-19, lts-18, lts-16, lts-14, lts-12]
        include:
          - resolver: lts-12
            ghc: 8.4.4
            stack-yaml: stack-old.yaml
          - resolver: lts-14
            ghc: 8.6.5
            stack-yaml: stack-old.yaml
          - resolver: lts-16
            ghc: 8.8.4
            stack-yaml: stack-old.yaml
          - resolver: lts-18
            ghc: 8.10.7
            stack-yaml: stack.lts-18.yaml
          - resolver: lts-19
            ghc: 9.0.2
          # Latest stable for MacOS: ghc-8.8.4
          - resolver: lts-16
            os: macOS-latest
            stack-yaml: stack-old.yaml
          # Latest stable for Windows: ghc-8.6.5
          - resolver: lts-14
            os: windows-latest
            stack-yaml: stack-old.yaml
    env:
      STACK_YAML: stack.yaml
      STACK_ARGS: '--resolver ${{ matrix.resolver }} --system-ghc'
      cache-version: v3 # bump up this version to invalidate currently stored cache
    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        enable-stack: true
        stack-version: 'latest'
        cabal-version: '3.6'

    - name: Cache
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.stack
          massiv-serialise/.stack-work
          massiv-persist/.stack-work
        key: ${{ runner.os }}-${{ matrix.resolver }}-${{ env.cache-version }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.resolver }}-${{ env.cache-version }}
    # Executable files somehow become incompatible after restoring on MacOS from a
    # previous build, so it needs to be cleaned up. This is very inconvenient and will
    # need to be fixed.
    # - name: MacOS workaround for failure due to setup-exe-cache
    #   if: steps.cache.outputs.cache-hit == 'true' && matrix.os == 'macOS-latest'
    #   run: |
    #     rm -r ~/.stack/setup-exe-cache
    #     rm -r massiv-serialise/.stack-work
    #     rm -r massiv-persist/.stack-work
    - name: Windows Cache
      id: cache-windows
      uses: actions/cache@v2
      if: matrix.os == 'windows-latest'
      with:
        path: |
          C:\\Users\\RUNNER~1\\AppData\\Roaming\\stack
          C:\\Users\\RUNNER~1\\AppData\\Local\\Programs\\stack
        key: ${{ runner.os }}-${{ matrix.resolver }}-programs-${{ env.cache-version }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.resolver }}-programs-${{ env.cache-version }}xs

    - name: Build
      run: |
        set -ex
        [ -n "${{ matrix.stack-yaml }}" ] && STACK_YAML=${{ matrix.stack-yaml }}
        curl -sSL https://raw.githubusercontent.com/lehins/utils/5d9b17f2f084ce54978dbd71974970483063a540/haskell/git-modtime/git-modtime.hs -o git-modtime.hs
        mkdir -p .stack-work-root
        # Windows is confused about stack's default user directory
        stack $STACK_ARGS runghc -- git-modtime.hs -f .stack-work-root/tree-contents.txt
        stack $STACK_ARGS test --no-run-tests --bench --no-run-benchmarks --haddock --no-haddock-deps
    - name: Tests
      run: |
        set -ex
        [ -n "${{ matrix.ghc }}" ] && [ "${{ matrix.os }}" == "ubuntu-latest" ] && STACK_ARGS="$STACK_ARGS --system-ghc"
        [ -n "${{ matrix.stack-yaml }}" ] && STACK_YAML=${{ matrix.stack-yaml }}
        stack $STACK_ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps massiv-persist
        stack $STACK_ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps massiv-serialise
